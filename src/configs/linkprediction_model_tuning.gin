# GCN setup
GCN_/LPBenchmark.model_class = @GCN
GCN_/LPBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'patience': %PATIENCE,
}
GCN_/LPBenchmark.h_params = {
    'in_channels'     : %IN_CHANNELS,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers'      : %NUM_LAYERS,
    'dropout'         : %DROPOUT,
    'lr'              : %LR,
    'weight_decay'    : %WEIGHT_DECAY,
}
# HGCN setup
HGCNLinkPrediction_/LPBenchmark.model_class = @HGCN
HGCNLinkPrediction_/LPBenchmark.benchmark_params = {
    'epochs'  : %EPOCHS,
    'patience': %PATIENCE,
}

HGCNLinkPrediction_/LPBenchmark.h_params = {
    'in_channels'     : %IN_CHANNELS,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers'      : %NUM_LAYERS,
    'dropout'         : %DROPOUT,
    'lr'              : %LR,
    'weight_decay'    : %WEIGHT_DECAY,
    'c'               : %C,  
    'task'            : %TASK          
}

# MLP setup
MLP_/LPBenchmark.model_class = @MLP
MLP_/LPBenchmark.benchmark_params = {
    'epochs'  : %EPOCHS,
    'patience': %PATIENCE,
}

MLP_/LPBenchmark.h_params = {
    'in_channels'     : %IN_CHANNELS,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers'      : %NUM_LAYERS,
    'dropout'         : %DROPOUT,
    'lr'              : %LR,
    'weight_decay'    : %WEIGHT_DECAY,
}
