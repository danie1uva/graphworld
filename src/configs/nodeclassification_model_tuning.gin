# GCN setup
GCN_/NNNodeBenchmark.model_class = @GCN
GCN_/NNNodeBenchmark.benchmark_params = {
    'epochs'  : %EPOCHS,
    'patience': %PATIENCE,
}

GCN_/NNNodeBenchmark.h_params = {
    'in_channels'     : %IN_CHANNELS,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers'      : %NUM_LAYERS,
    'dropout'         : %DROPOUT,
    'lr'              : %LR,
    'weight_decay'    : %WEIGHT_DECAY,
}

# HGCN setup
HGCN_/NNNodeBenchmark.model_class = @HGCN
HGCN_/NNNodeBenchmark.benchmark_params = {
    'epochs'  : %EPOCHS,
    'patience': %PATIENCE,
}

HGCN_/NNNodeBenchmark.h_params = {
    'in_channels'     : %IN_CHANNELS,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers'      : %NUM_LAYERS,
    'dropout'         : %DROPOUT,
    'lr'              : %LR,
    'weight_decay'    : %WEIGHT_DECAY,
    'c'               : %C,            
}

# MLP setup
MLP_/NNNodeBenchmark.model_class = @MLP
MLP_/NNNodeBenchmark.benchmark_params = {
    'epochs'  : %EPOCHS,
    'patience': %PATIENCE,
}

MLP_/NNNodeBenchmark.h_params = {
    'in_channels'     : %IN_CHANNELS,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers'      : %NUM_LAYERS,
    'dropout'         : %DROPOUT,
    'lr'              : %LR,
    'weight_decay'    : %WEIGHT_DECAY,
}
